addressLength =
    addressLength3
  | addressLength2
  | addressLength1

addressLength1 =
    REAL CM
  | REAL
  | FREEVARIABLE
  | previousLength
  | LENGTH addressLineSegment
  | addressLineSegment

addressLength2 =
  | TWICE addressLength1
  | THRICE addressLength1
  | REAL TIMES addressLength1
  | HALF addressLength1
  | GREATERTHAN addressLength1
  | LESSTHAN addressLength1
  | operation addressLength1 addressLength1

addressLength3 =
  | TWICE addressLength2
  | THRICE addressLength2
  | REAL TIMES addressLength2
  | HALF addressLength2
  | GREATERTHAN addressLength2
  | LESSTHAN addressLength2
  | operation addressLength2 addressLength2  

addressDegree =
    addressDegree3
  | addressDegree2
  | addressDegree1

addressDegree1 =
    REAL DEGREES
  | REAL
  | FREEVARIABLE
  | previousDegree
  | addressAngle

addressDegree2 =
  | TWICE addressDegree1
  | THRICE addressDegree1
  | REAL TIMES addressDegree1
  | HALF addressDegree1
  | GREATERTHAN addressDegree1
  | LESSTHAN addressDegree1
  | operation addressDegree1 addressDegree1

addressDegree3 =
  | TWICE addressDegree2
  | THRICE addressDegree2
  | REAL TIMES addressDegree2
  | HALF addressDegree2
  | GREATERTHAN addressDegree2
  | LESSTHAN addressDegree2
  | operation addressDegree2 addressDegree2  

TIMES =
    'times'

HALF =
    'half'

GREATERTHAN =
    'greater' 'than'

LESSTHAN =
    'less' 'than'

EQUALS =
    'equals'

commands = 
    commands command
  | command

command =
    constructCommand 
  | markCommand 
  | cutCommand
  | joinCommand
  | divideCommand

constructCommand = 
  CONSTRUCT constructibleAndProperties

CONSTRUCT =
    'construct'
  | 'draw'

constructibleAndProperties = 
    lineSegmentAndProperties
  | lineAndProperties
  | arcAndProperties
  | circleAndProperties
  | angleAndProperties

lineSegmentAndProperties = 
    addressLineSegment GIVENTHAT conditions
  | addressLineSegment lineSegmentProperties

conditions =
    condition
  | condition condition
  | condition condition condition
  | condition condition condition condition

condition =
    LENGTH addressLineSegment EQUALS addressLength
  | addressLineSegment EQUALS addressLength
  | addressAngle EQUALS addressAngle

GIVENTHAT =
    'given' 'that'
  | 'given'

LINESEGMENT =
  'line' 'segment'

POINTPAIR =
  [A-Z][A-Z]

lineSegmentProperties = 
    LENGTH addressLength
  | addressLength

LENGTH =
  'length'

CM =
  'cm'

addressLineSegment =
    LINESEGMENT POINTPAIR
  | POINTPAIR
  | adjectivePrevious LINESEGMENT
  | addressFreeObject

angleAndProperties =
    ANGLE addressAngle addressPoint addressDegree

ANGLE =
    'angle'

addressAngle =
    ANGLE POINTTRIPLET
  | ANGLE POINTSINGLET
  | POINTTRIPLET
  | POINTSINGLET

DEGREES =
    'degree'
  | 'degrees'

circleAndProperties = 
    CIRCLE CENTER addressPoint RADIUS addressLength
  | CIRCLE CENTER addressPoint DIAMETER addressLength

CIRCLE =
  'circle'

LINE =
    'line'

lineAndProperties = 
    LINE [a-z] 

arcAndProperties =
  ARC arcProperties

ARC =
    'arc'
  | 'arcs'

arcProperties =
    centersClause radiiClause mutualIntersectionClause
  | centersClause radiusClause mutualIntersectionClause
  | centerClause radiusClause intersectionClause

mutualIntersectionClause =
    INTERSECTING EACHOTHER AT POINTSINGLET
  | INTERSECTING EACHOTHER AT POINTSINGLET POINTSINGLET

centerClause =
    CENTER POINTSINGLET

centersClause =
    CENTERS POINTSINGLET POINTSINGLET

radiusClause =
    RADIUS addressLength

radiiClause =
    RADIUS addressLength addressLength

intersectionClause =
    INTERSECTING addressIntersectableObject AT POINTSINGLET POINTSINGLET
  | INTERSECTING addressIntersectableObject AT POINTSINGLET

addressIntersectableObject =
    addressLineSegment
  | addressLine
  | addressArc
  | addressCircle

CENTER =
  'center'

POINTSINGLET =
  [A-Z]

RADIUS =
  'radius'

DIAMETER =
  'diameter'

REAL =
  [0-9]+(.[0-9]+)?

intersectingArcsAndProperties =
  INTERSECTINGARCS intersectingArcsProperties

INTERSECTINGARCS =
    ARCS
  | ARC

ARC =
    'arc'

ARCS =
    'arcs'

INTERSECTING =
    'intersecting'
  | 'cutting'

EACHOTHER =
    'eachother'
  | 'each' 'other'

CENTERS =
    CENTER
  | 'centers'

intersectingArcsProperties =
  intersectingArcsCenters intersectingArcsRadius intersectingArcsIntersectionPoint

intersectingArcsCenters =
 CENTERS POINTSINGLET POINTSINGLET

intersectingArcsRadius =
    RADIUS addressLength addressLength
  | RADIUS addressLength

intersectingArcsIntersectionPoint =
    INTERSECTING AT addressPoint

AT =
    'at'

divideCommand =
    DIVIDE divisibleAndProperties

DIVIDE =
    'divide'

divisibleAndProperties =
    divisibleObject NUMPARTS [0-9]+

NUMPARTS =
  'numParts'

divisibleObject =
    addressLineSegment

joinCommand = 
  JOIN addressPointPairs

JOIN =
  'join'

addressPointPairs = 
    POINTPAIR
  | POINTPAIR POINTPAIR
  | POINTPAIR POINTPAIR POINTPAIR
  | adjectivePrevious POINTS

POINTTRIPLET =
  [A-Z][A-Z][A-Z]

markCommand =
    MARK markableAndProperties

MARK = 
    'mark'
  | 'draw'
  | 'label'

markableAndProperties =
    pointAndProperties
  | intersectionPointsAndProperties
  | angleArmPointsAndProperties

angleArmPointsAndProperties =
    POINT POINTSINGLET ON ARM addressAngle POINTSINGLET ON ARM addressAngle

ARM =
  'arm'

addressAngle =
    POINTTRIPLET
  | POINTSINGLET
  | addressPreviousObject

intersectionPointsAndProperties = 
    INTERSECTIONPOINTS addressIntersectingObject addressIntersectingObject addressPoint addressPoint
  | INTERSECTIONPOINTS addressIntersectingObject addressIntersectingObject addressPoint
  | INTERSECTIONPOINTS addressPreviousObjects addressPoint

INTERSECTIONPOINTS =
    'intersection' 'points'
  | 'intersection' 'point'
  | 'intersection'
  | 'intersections'

addressIntersectingObject = 
    addressArc
  | addressCircle
  | addressLine
  | addressLineSegment

pointAndProperties = 
    POINT POINTSINGLET pointAndPropertiesOnCase
  | POINT POINTSINGLET pointAndPropertiesNotOnCase

pointAndPropertiesOnCase =
    ON labelable

pointAndPropertiesNotOnCase =
    NOTON labelable

ON =
  'on'

NOTON =
  'not' 'on'

labelable =
    addressLineSegment
  | addressArc
  | addressLine

addressLine =
    [a-z]
  | LINE [a-z]
  | adjectivePrevious LINE
  | addressFreeObject

addressArc =
  | adjectivePrevious ARC
  | adjectivePrevious ARCS
  | addressFreeObject

adjectivePrevious =
    THIS
  | THESE
  | PREVIOUS
  | THOSE

addressPreviousObject =
    THIS
  | THIS object
  | THESE
  | THESE objects
  | PREVIOUS object
  | PREVIOUS objects
  | IT
  | THEM
  | THOSE
  | THOSE objects

THIS =
  'this'

THESE =
    'these'

PREVIOUS =
  'previous'

IT =
  'it'

THEM =
  'them'

THOSE =
  'those'

object = 
    LINESEGMENT
  | LINE
  | CIRCLE
  | ARC
  | POINT

objects =
    ARCS
  | POINTS
  | object

cutCommand =
  CUT cuttableAndProperties

CUT =
  'cut'

addressPoint =
    POINTSINGLET
  | POINT POINTSINGLET
  | adjectivePrevious POINT
  | addressFreeObject

addressFreeObject =
    'ANY'

ANY =
  'any'

POINT =
  'point'

cuttableAndProperties =
    addressLineSegment addressLength fromClause
  | addressLineSegment conditions
  | addressLine atPoints
  | addressArc atPoints
  | addressCircle atPoints

atPoints =
    AT addressPoint
  | AT addressPoint addressPoint

fromClause =
    FROM addressLineSegment
  | FROM addressLine
  | FROM addressPreviousObject

addressCircle = 
    CIRCLE POINTSINGLET
  | adjectivePrevious CIRCLE
  | addressFreeObject  

FROM =
  'from'

TWICE =
  'twice'

THRICE =
  'thrice'

EQUALS =
    'equals'
  | 'equal'
  | 'is'
  | 'has'

previousLength =
    'same'

operation =
    DIFFERENCE
  | SUM

DIFFERENCE =
    'minus'
  | 'difference'

SUM =
    'sum'

FREEVARIABLE =
    'any'
  | 'convenient'
